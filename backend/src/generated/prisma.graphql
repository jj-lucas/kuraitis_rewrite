# source: https://eu1.prisma.sh/lucas-gabriel-salina-dovidio/kuraitis-rewrite/dev
# timestamp: Sat Oct 24 2020 17:55:33 GMT+0200 (Central European Summer Time)

type AggregateAttribute {
  count: Int!
}

type AggregateCart {
  count: Int!
}

type AggregateCategory {
  count: Int!
}

type AggregateImage {
  count: Int!
}

type AggregateOrder {
  count: Int!
}

type AggregatePrice {
  count: Int!
}

type AggregateProduct {
  count: Int!
}

type AggregatePurchasedSku {
  count: Int!
}

type AggregateReport {
  count: Int!
}

type AggregateSKU {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Attribute implements Node {
  id: ID!
  name: String!
  options: String!
  position: Int!
}

"""A connection to a list of items."""
type AttributeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AttributeEdge]!
  aggregate: AggregateAttribute!
}

input AttributeCreateInput {
  id: ID
  name: String!
  options: String!
  position: Int!
}

"""An edge in a connection."""
type AttributeEdge {
  """The item at the end of the edge."""
  node: Attribute!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AttributeOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  options_ASC
  options_DESC
  position_ASC
  position_DESC
}

type AttributePreviousValues {
  id: ID!
  name: String!
  options: String!
  position: Int!
}

type AttributeSubscriptionPayload {
  mutation: MutationType!
  node: Attribute
  updatedFields: [String!]
  previousValues: AttributePreviousValues
}

input AttributeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AttributeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AttributeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AttributeSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AttributeWhereInput
}

input AttributeUpdateInput {
  name: String
  options: String
  position: Int
}

input AttributeUpdateManyMutationInput {
  name: String
  options: String
  position: Int
}

input AttributeWhereInput {
  """Logical AND on all given filters."""
  AND: [AttributeWhereInput!]

  """Logical OR on all given filters."""
  OR: [AttributeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AttributeWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  options: String

  """All values that are not equal to given value."""
  options_not: String

  """All values that are contained in given list."""
  options_in: [String!]

  """All values that are not contained in given list."""
  options_not_in: [String!]

  """All values less than the given value."""
  options_lt: String

  """All values less than or equal the given value."""
  options_lte: String

  """All values greater than the given value."""
  options_gt: String

  """All values greater than or equal the given value."""
  options_gte: String

  """All values containing the given string."""
  options_contains: String

  """All values not containing the given string."""
  options_not_contains: String

  """All values starting with the given string."""
  options_starts_with: String

  """All values not starting with the given string."""
  options_not_starts_with: String

  """All values ending with the given string."""
  options_ends_with: String

  """All values not ending with the given string."""
  options_not_ends_with: String
  position: Int

  """All values that are not equal to given value."""
  position_not: Int

  """All values that are contained in given list."""
  position_in: [Int!]

  """All values that are not contained in given list."""
  position_not_in: [Int!]

  """All values less than the given value."""
  position_lt: Int

  """All values less than or equal the given value."""
  position_lte: Int

  """All values greater than the given value."""
  position_gt: Int

  """All values greater than or equal the given value."""
  position_gte: Int
}

input AttributeWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Cart implements Node {
  id: ID!
  createdAt: DateTime!
  items: String
}

"""A connection to a list of items."""
type CartConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CartEdge]!
  aggregate: AggregateCart!
}

input CartCreateInput {
  id: ID
  items: String
}

"""An edge in a connection."""
type CartEdge {
  """The item at the end of the edge."""
  node: Cart!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CartOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  items_ASC
  items_DESC
}

type CartPreviousValues {
  id: ID!
  createdAt: DateTime!
  items: String
}

type CartSubscriptionPayload {
  mutation: MutationType!
  node: Cart
  updatedFields: [String!]
  previousValues: CartPreviousValues
}

input CartSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CartSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CartSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CartSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CartWhereInput
}

input CartUpdateInput {
  items: String
}

input CartUpdateManyMutationInput {
  items: String
}

input CartWhereInput {
  """Logical AND on all given filters."""
  AND: [CartWhereInput!]

  """Logical OR on all given filters."""
  OR: [CartWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CartWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  items: String

  """All values that are not equal to given value."""
  items_not: String

  """All values that are contained in given list."""
  items_in: [String!]

  """All values that are not contained in given list."""
  items_not_in: [String!]

  """All values less than the given value."""
  items_lt: String

  """All values less than or equal the given value."""
  items_lte: String

  """All values greater than the given value."""
  items_gt: String

  """All values greater than or equal the given value."""
  items_gte: String

  """All values containing the given string."""
  items_contains: String

  """All values not containing the given string."""
  items_not_contains: String

  """All values starting with the given string."""
  items_starts_with: String

  """All values not starting with the given string."""
  items_not_starts_with: String

  """All values ending with the given string."""
  items_ends_with: String

  """All values not ending with the given string."""
  items_not_ends_with: String
}

input CartWhereUniqueInput {
  id: ID
}

type Category implements Node {
  id: ID!
  sorting: Int
  published: Boolean
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product!]
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image!]
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

"""A connection to a list of items."""
type CategoryConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  id: ID
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  products: ProductCreateManyWithoutCategoriesInput
  images: ImageCreateManyWithoutCategoryInput
}

input CategoryCreateManyWithoutProductsInput {
  create: [CategoryCreateWithoutProductsInput!]
  connect: [CategoryWhereUniqueInput!]
}

input CategoryCreateOneWithoutImagesInput {
  create: CategoryCreateWithoutImagesInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutImagesInput {
  id: ID
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  products: ProductCreateManyWithoutCategoriesInput
}

input CategoryCreateWithoutProductsInput {
  id: ID
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  images: ImageCreateManyWithoutCategoryInput
}

"""An edge in a connection."""
type CategoryEdge {
  """The item at the end of the edge."""
  node: Category!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  sorting_ASC
  sorting_DESC
  published_ASC
  published_DESC
  slug_da_ASC
  slug_da_DESC
  slug_en_ASC
  slug_en_DESC
  name_da_ASC
  name_da_DESC
  name_en_ASC
  name_en_DESC
  description_da_ASC
  description_da_DESC
  description_en_ASC
  description_en_DESC
}

type CategoryPreviousValues {
  id: ID!
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input CategoryScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  slug_da: String

  """All values that are not equal to given value."""
  slug_da_not: String

  """All values that are contained in given list."""
  slug_da_in: [String!]

  """All values that are not contained in given list."""
  slug_da_not_in: [String!]

  """All values less than the given value."""
  slug_da_lt: String

  """All values less than or equal the given value."""
  slug_da_lte: String

  """All values greater than the given value."""
  slug_da_gt: String

  """All values greater than or equal the given value."""
  slug_da_gte: String

  """All values containing the given string."""
  slug_da_contains: String

  """All values not containing the given string."""
  slug_da_not_contains: String

  """All values starting with the given string."""
  slug_da_starts_with: String

  """All values not starting with the given string."""
  slug_da_not_starts_with: String

  """All values ending with the given string."""
  slug_da_ends_with: String

  """All values not ending with the given string."""
  slug_da_not_ends_with: String
  slug_en: String

  """All values that are not equal to given value."""
  slug_en_not: String

  """All values that are contained in given list."""
  slug_en_in: [String!]

  """All values that are not contained in given list."""
  slug_en_not_in: [String!]

  """All values less than the given value."""
  slug_en_lt: String

  """All values less than or equal the given value."""
  slug_en_lte: String

  """All values greater than the given value."""
  slug_en_gt: String

  """All values greater than or equal the given value."""
  slug_en_gte: String

  """All values containing the given string."""
  slug_en_contains: String

  """All values not containing the given string."""
  slug_en_not_contains: String

  """All values starting with the given string."""
  slug_en_starts_with: String

  """All values not starting with the given string."""
  slug_en_not_starts_with: String

  """All values ending with the given string."""
  slug_en_ends_with: String

  """All values not ending with the given string."""
  slug_en_not_ends_with: String
  name_da: String

  """All values that are not equal to given value."""
  name_da_not: String

  """All values that are contained in given list."""
  name_da_in: [String!]

  """All values that are not contained in given list."""
  name_da_not_in: [String!]

  """All values less than the given value."""
  name_da_lt: String

  """All values less than or equal the given value."""
  name_da_lte: String

  """All values greater than the given value."""
  name_da_gt: String

  """All values greater than or equal the given value."""
  name_da_gte: String

  """All values containing the given string."""
  name_da_contains: String

  """All values not containing the given string."""
  name_da_not_contains: String

  """All values starting with the given string."""
  name_da_starts_with: String

  """All values not starting with the given string."""
  name_da_not_starts_with: String

  """All values ending with the given string."""
  name_da_ends_with: String

  """All values not ending with the given string."""
  name_da_not_ends_with: String
  name_en: String

  """All values that are not equal to given value."""
  name_en_not: String

  """All values that are contained in given list."""
  name_en_in: [String!]

  """All values that are not contained in given list."""
  name_en_not_in: [String!]

  """All values less than the given value."""
  name_en_lt: String

  """All values less than or equal the given value."""
  name_en_lte: String

  """All values greater than the given value."""
  name_en_gt: String

  """All values greater than or equal the given value."""
  name_en_gte: String

  """All values containing the given string."""
  name_en_contains: String

  """All values not containing the given string."""
  name_en_not_contains: String

  """All values starting with the given string."""
  name_en_starts_with: String

  """All values not starting with the given string."""
  name_en_not_starts_with: String

  """All values ending with the given string."""
  name_en_ends_with: String

  """All values not ending with the given string."""
  name_en_not_ends_with: String
  description_da: String

  """All values that are not equal to given value."""
  description_da_not: String

  """All values that are contained in given list."""
  description_da_in: [String!]

  """All values that are not contained in given list."""
  description_da_not_in: [String!]

  """All values less than the given value."""
  description_da_lt: String

  """All values less than or equal the given value."""
  description_da_lte: String

  """All values greater than the given value."""
  description_da_gt: String

  """All values greater than or equal the given value."""
  description_da_gte: String

  """All values containing the given string."""
  description_da_contains: String

  """All values not containing the given string."""
  description_da_not_contains: String

  """All values starting with the given string."""
  description_da_starts_with: String

  """All values not starting with the given string."""
  description_da_not_starts_with: String

  """All values ending with the given string."""
  description_da_ends_with: String

  """All values not ending with the given string."""
  description_da_not_ends_with: String
  description_en: String

  """All values that are not equal to given value."""
  description_en_not: String

  """All values that are contained in given list."""
  description_en_in: [String!]

  """All values that are not contained in given list."""
  description_en_not_in: [String!]

  """All values less than the given value."""
  description_en_lt: String

  """All values less than or equal the given value."""
  description_en_lte: String

  """All values greater than the given value."""
  description_en_gt: String

  """All values greater than or equal the given value."""
  description_en_gte: String

  """All values containing the given string."""
  description_en_contains: String

  """All values not containing the given string."""
  description_en_not_contains: String

  """All values starting with the given string."""
  description_en_starts_with: String

  """All values not starting with the given string."""
  description_en_not_starts_with: String

  """All values ending with the given string."""
  description_en_ends_with: String

  """All values not ending with the given string."""
  description_en_not_ends_with: String
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CategorySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategorySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategorySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
}

input CategoryUpdateInput {
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  products: ProductUpdateManyWithoutCategoriesInput
  images: ImageUpdateManyWithoutCategoryInput
}

input CategoryUpdateManyDataInput {
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input CategoryUpdateManyMutationInput {
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input CategoryUpdateManyWithoutProductsInput {
  create: [CategoryCreateWithoutProductsInput!]
  connect: [CategoryWhereUniqueInput!]
  set: [CategoryWhereUniqueInput!]
  disconnect: [CategoryWhereUniqueInput!]
  delete: [CategoryWhereUniqueInput!]
  update: [CategoryUpdateWithWhereUniqueWithoutProductsInput!]
  updateMany: [CategoryUpdateManyWithWhereNestedInput!]
  deleteMany: [CategoryScalarWhereInput!]
  upsert: [CategoryUpsertWithWhereUniqueWithoutProductsInput!]
}

input CategoryUpdateManyWithWhereNestedInput {
  where: CategoryScalarWhereInput!
  data: CategoryUpdateManyDataInput!
}

input CategoryUpdateOneWithoutImagesInput {
  create: CategoryCreateWithoutImagesInput
  connect: CategoryWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CategoryUpdateWithoutImagesDataInput
  upsert: CategoryUpsertWithoutImagesInput
}

input CategoryUpdateWithoutImagesDataInput {
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  products: ProductUpdateManyWithoutCategoriesInput
}

input CategoryUpdateWithoutProductsDataInput {
  sorting: Int
  published: Boolean
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  images: ImageUpdateManyWithoutCategoryInput
}

input CategoryUpdateWithWhereUniqueWithoutProductsInput {
  where: CategoryWhereUniqueInput!
  data: CategoryUpdateWithoutProductsDataInput!
}

input CategoryUpsertWithoutImagesInput {
  update: CategoryUpdateWithoutImagesDataInput!
  create: CategoryCreateWithoutImagesInput!
}

input CategoryUpsertWithWhereUniqueWithoutProductsInput {
  where: CategoryWhereUniqueInput!
  update: CategoryUpdateWithoutProductsDataInput!
  create: CategoryCreateWithoutProductsInput!
}

input CategoryWhereInput {
  """Logical AND on all given filters."""
  AND: [CategoryWhereInput!]

  """Logical OR on all given filters."""
  OR: [CategoryWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CategoryWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  slug_da: String

  """All values that are not equal to given value."""
  slug_da_not: String

  """All values that are contained in given list."""
  slug_da_in: [String!]

  """All values that are not contained in given list."""
  slug_da_not_in: [String!]

  """All values less than the given value."""
  slug_da_lt: String

  """All values less than or equal the given value."""
  slug_da_lte: String

  """All values greater than the given value."""
  slug_da_gt: String

  """All values greater than or equal the given value."""
  slug_da_gte: String

  """All values containing the given string."""
  slug_da_contains: String

  """All values not containing the given string."""
  slug_da_not_contains: String

  """All values starting with the given string."""
  slug_da_starts_with: String

  """All values not starting with the given string."""
  slug_da_not_starts_with: String

  """All values ending with the given string."""
  slug_da_ends_with: String

  """All values not ending with the given string."""
  slug_da_not_ends_with: String
  slug_en: String

  """All values that are not equal to given value."""
  slug_en_not: String

  """All values that are contained in given list."""
  slug_en_in: [String!]

  """All values that are not contained in given list."""
  slug_en_not_in: [String!]

  """All values less than the given value."""
  slug_en_lt: String

  """All values less than or equal the given value."""
  slug_en_lte: String

  """All values greater than the given value."""
  slug_en_gt: String

  """All values greater than or equal the given value."""
  slug_en_gte: String

  """All values containing the given string."""
  slug_en_contains: String

  """All values not containing the given string."""
  slug_en_not_contains: String

  """All values starting with the given string."""
  slug_en_starts_with: String

  """All values not starting with the given string."""
  slug_en_not_starts_with: String

  """All values ending with the given string."""
  slug_en_ends_with: String

  """All values not ending with the given string."""
  slug_en_not_ends_with: String
  name_da: String

  """All values that are not equal to given value."""
  name_da_not: String

  """All values that are contained in given list."""
  name_da_in: [String!]

  """All values that are not contained in given list."""
  name_da_not_in: [String!]

  """All values less than the given value."""
  name_da_lt: String

  """All values less than or equal the given value."""
  name_da_lte: String

  """All values greater than the given value."""
  name_da_gt: String

  """All values greater than or equal the given value."""
  name_da_gte: String

  """All values containing the given string."""
  name_da_contains: String

  """All values not containing the given string."""
  name_da_not_contains: String

  """All values starting with the given string."""
  name_da_starts_with: String

  """All values not starting with the given string."""
  name_da_not_starts_with: String

  """All values ending with the given string."""
  name_da_ends_with: String

  """All values not ending with the given string."""
  name_da_not_ends_with: String
  name_en: String

  """All values that are not equal to given value."""
  name_en_not: String

  """All values that are contained in given list."""
  name_en_in: [String!]

  """All values that are not contained in given list."""
  name_en_not_in: [String!]

  """All values less than the given value."""
  name_en_lt: String

  """All values less than or equal the given value."""
  name_en_lte: String

  """All values greater than the given value."""
  name_en_gt: String

  """All values greater than or equal the given value."""
  name_en_gte: String

  """All values containing the given string."""
  name_en_contains: String

  """All values not containing the given string."""
  name_en_not_contains: String

  """All values starting with the given string."""
  name_en_starts_with: String

  """All values not starting with the given string."""
  name_en_not_starts_with: String

  """All values ending with the given string."""
  name_en_ends_with: String

  """All values not ending with the given string."""
  name_en_not_ends_with: String
  description_da: String

  """All values that are not equal to given value."""
  description_da_not: String

  """All values that are contained in given list."""
  description_da_in: [String!]

  """All values that are not contained in given list."""
  description_da_not_in: [String!]

  """All values less than the given value."""
  description_da_lt: String

  """All values less than or equal the given value."""
  description_da_lte: String

  """All values greater than the given value."""
  description_da_gt: String

  """All values greater than or equal the given value."""
  description_da_gte: String

  """All values containing the given string."""
  description_da_contains: String

  """All values not containing the given string."""
  description_da_not_contains: String

  """All values starting with the given string."""
  description_da_starts_with: String

  """All values not starting with the given string."""
  description_da_not_starts_with: String

  """All values ending with the given string."""
  description_da_ends_with: String

  """All values not ending with the given string."""
  description_da_not_ends_with: String
  description_en: String

  """All values that are not equal to given value."""
  description_en_not: String

  """All values that are contained in given list."""
  description_en_in: [String!]

  """All values that are not contained in given list."""
  description_en_not_in: [String!]

  """All values less than the given value."""
  description_en_lt: String

  """All values less than or equal the given value."""
  description_en_lte: String

  """All values greater than the given value."""
  description_en_gt: String

  """All values greater than or equal the given value."""
  description_en_gte: String

  """All values containing the given string."""
  description_en_contains: String

  """All values not containing the given string."""
  description_en_not_contains: String

  """All values starting with the given string."""
  description_en_starts_with: String

  """All values not starting with the given string."""
  description_en_not_starts_with: String

  """All values ending with the given string."""
  description_en_ends_with: String

  """All values not ending with the given string."""
  description_en_not_ends_with: String
  products_every: ProductWhereInput
  products_some: ProductWhereInput
  products_none: ProductWhereInput
  images_every: ImageWhereInput
  images_some: ImageWhereInput
  images_none: ImageWhereInput
}

input CategoryWhereUniqueInput {
  id: ID
  slug_da: String
  slug_en: String
}

scalar DateTime

type Image implements Node {
  id: ID!
  image: String!
  largeImage: String!
  sorting: Int
  category: Category
  product: Product
}

"""A connection to a list of items."""
type ImageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ImageEdge]!
  aggregate: AggregateImage!
}

input ImageCreateInput {
  id: ID
  image: String!
  largeImage: String!
  sorting: Int
  category: CategoryCreateOneWithoutImagesInput
  product: ProductCreateOneWithoutImagesInput
}

input ImageCreateManyWithoutCategoryInput {
  create: [ImageCreateWithoutCategoryInput!]
  connect: [ImageWhereUniqueInput!]
}

input ImageCreateManyWithoutProductInput {
  create: [ImageCreateWithoutProductInput!]
  connect: [ImageWhereUniqueInput!]
}

input ImageCreateOneInput {
  create: ImageCreateInput
  connect: ImageWhereUniqueInput
}

input ImageCreateWithoutCategoryInput {
  id: ID
  image: String!
  largeImage: String!
  sorting: Int
  product: ProductCreateOneWithoutImagesInput
}

input ImageCreateWithoutProductInput {
  id: ID
  image: String!
  largeImage: String!
  sorting: Int
  category: CategoryCreateOneWithoutImagesInput
}

"""An edge in a connection."""
type ImageEdge {
  """The item at the end of the edge."""
  node: Image!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ImageOrderByInput {
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  largeImage_ASC
  largeImage_DESC
  sorting_ASC
  sorting_DESC
}

type ImagePreviousValues {
  id: ID!
  image: String!
  largeImage: String!
  sorting: Int
}

input ImageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
}

type ImageSubscriptionPayload {
  mutation: MutationType!
  node: Image
  updatedFields: [String!]
  previousValues: ImagePreviousValues
}

input ImageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ImageWhereInput
}

input ImageUpdateDataInput {
  image: String
  largeImage: String
  sorting: Int
  category: CategoryUpdateOneWithoutImagesInput
  product: ProductUpdateOneWithoutImagesInput
}

input ImageUpdateInput {
  image: String
  largeImage: String
  sorting: Int
  category: CategoryUpdateOneWithoutImagesInput
  product: ProductUpdateOneWithoutImagesInput
}

input ImageUpdateManyDataInput {
  image: String
  largeImage: String
  sorting: Int
}

input ImageUpdateManyMutationInput {
  image: String
  largeImage: String
  sorting: Int
}

input ImageUpdateManyWithoutCategoryInput {
  create: [ImageCreateWithoutCategoryInput!]
  connect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  disconnect: [ImageWhereUniqueInput!]
  delete: [ImageWhereUniqueInput!]
  update: [ImageUpdateWithWhereUniqueWithoutCategoryInput!]
  updateMany: [ImageUpdateManyWithWhereNestedInput!]
  deleteMany: [ImageScalarWhereInput!]
  upsert: [ImageUpsertWithWhereUniqueWithoutCategoryInput!]
}

input ImageUpdateManyWithoutProductInput {
  create: [ImageCreateWithoutProductInput!]
  connect: [ImageWhereUniqueInput!]
  set: [ImageWhereUniqueInput!]
  disconnect: [ImageWhereUniqueInput!]
  delete: [ImageWhereUniqueInput!]
  update: [ImageUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [ImageUpdateManyWithWhereNestedInput!]
  deleteMany: [ImageScalarWhereInput!]
  upsert: [ImageUpsertWithWhereUniqueWithoutProductInput!]
}

input ImageUpdateManyWithWhereNestedInput {
  where: ImageScalarWhereInput!
  data: ImageUpdateManyDataInput!
}

input ImageUpdateOneInput {
  create: ImageCreateInput
  connect: ImageWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ImageUpdateDataInput
  upsert: ImageUpsertNestedInput
}

input ImageUpdateWithoutCategoryDataInput {
  image: String
  largeImage: String
  sorting: Int
  product: ProductUpdateOneWithoutImagesInput
}

input ImageUpdateWithoutProductDataInput {
  image: String
  largeImage: String
  sorting: Int
  category: CategoryUpdateOneWithoutImagesInput
}

input ImageUpdateWithWhereUniqueWithoutCategoryInput {
  where: ImageWhereUniqueInput!
  data: ImageUpdateWithoutCategoryDataInput!
}

input ImageUpdateWithWhereUniqueWithoutProductInput {
  where: ImageWhereUniqueInput!
  data: ImageUpdateWithoutProductDataInput!
}

input ImageUpsertNestedInput {
  update: ImageUpdateDataInput!
  create: ImageCreateInput!
}

input ImageUpsertWithWhereUniqueWithoutCategoryInput {
  where: ImageWhereUniqueInput!
  update: ImageUpdateWithoutCategoryDataInput!
  create: ImageCreateWithoutCategoryInput!
}

input ImageUpsertWithWhereUniqueWithoutProductInput {
  where: ImageWhereUniqueInput!
  update: ImageUpdateWithoutProductDataInput!
  create: ImageCreateWithoutProductInput!
}

input ImageWhereInput {
  """Logical AND on all given filters."""
  AND: [ImageWhereInput!]

  """Logical OR on all given filters."""
  OR: [ImageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ImageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  largeImage: String

  """All values that are not equal to given value."""
  largeImage_not: String

  """All values that are contained in given list."""
  largeImage_in: [String!]

  """All values that are not contained in given list."""
  largeImage_not_in: [String!]

  """All values less than the given value."""
  largeImage_lt: String

  """All values less than or equal the given value."""
  largeImage_lte: String

  """All values greater than the given value."""
  largeImage_gt: String

  """All values greater than or equal the given value."""
  largeImage_gte: String

  """All values containing the given string."""
  largeImage_contains: String

  """All values not containing the given string."""
  largeImage_not_contains: String

  """All values starting with the given string."""
  largeImage_starts_with: String

  """All values not starting with the given string."""
  largeImage_not_starts_with: String

  """All values ending with the given string."""
  largeImage_ends_with: String

  """All values not ending with the given string."""
  largeImage_not_ends_with: String
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
  category: CategoryWhereInput
  product: ProductWhereInput
}

input ImageWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createCategory(data: CategoryCreateInput!): Category!
  createReport(data: ReportCreateInput!): Report!
  createProduct(data: ProductCreateInput!): Product!
  createSKU(data: SKUCreateInput!): SKU!
  createAttribute(data: AttributeCreateInput!): Attribute!
  createCart(data: CartCreateInput!): Cart!
  createOrder(data: OrderCreateInput!): Order!
  createPrice(data: PriceCreateInput!): Price!
  createImage(data: ImageCreateInput!): Image!
  createPurchasedSku(data: PurchasedSkuCreateInput!): PurchasedSku!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateReport(data: ReportUpdateInput!, where: ReportWhereUniqueInput!): Report
  updateProduct(data: ProductUpdateInput!, where: ProductWhereUniqueInput!): Product
  updateSKU(data: SKUUpdateInput!, where: SKUWhereUniqueInput!): SKU
  updateAttribute(data: AttributeUpdateInput!, where: AttributeWhereUniqueInput!): Attribute
  updateCart(data: CartUpdateInput!, where: CartWhereUniqueInput!): Cart
  updateOrder(data: OrderUpdateInput!, where: OrderWhereUniqueInput!): Order
  updatePrice(data: PriceUpdateInput!, where: PriceWhereUniqueInput!): Price
  updateImage(data: ImageUpdateInput!, where: ImageWhereUniqueInput!): Image
  updatePurchasedSku(data: PurchasedSkuUpdateInput!, where: PurchasedSkuWhereUniqueInput!): PurchasedSku
  deleteUser(where: UserWhereUniqueInput!): User
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteReport(where: ReportWhereUniqueInput!): Report
  deleteProduct(where: ProductWhereUniqueInput!): Product
  deleteSKU(where: SKUWhereUniqueInput!): SKU
  deleteAttribute(where: AttributeWhereUniqueInput!): Attribute
  deleteCart(where: CartWhereUniqueInput!): Cart
  deleteOrder(where: OrderWhereUniqueInput!): Order
  deletePrice(where: PriceWhereUniqueInput!): Price
  deleteImage(where: ImageWhereUniqueInput!): Image
  deletePurchasedSku(where: PurchasedSkuWhereUniqueInput!): PurchasedSku
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  upsertReport(where: ReportWhereUniqueInput!, create: ReportCreateInput!, update: ReportUpdateInput!): Report!
  upsertProduct(where: ProductWhereUniqueInput!, create: ProductCreateInput!, update: ProductUpdateInput!): Product!
  upsertSKU(where: SKUWhereUniqueInput!, create: SKUCreateInput!, update: SKUUpdateInput!): SKU!
  upsertAttribute(where: AttributeWhereUniqueInput!, create: AttributeCreateInput!, update: AttributeUpdateInput!): Attribute!
  upsertCart(where: CartWhereUniqueInput!, create: CartCreateInput!, update: CartUpdateInput!): Cart!
  upsertOrder(where: OrderWhereUniqueInput!, create: OrderCreateInput!, update: OrderUpdateInput!): Order!
  upsertPrice(where: PriceWhereUniqueInput!, create: PriceCreateInput!, update: PriceUpdateInput!): Price!
  upsertImage(where: ImageWhereUniqueInput!, create: ImageCreateInput!, update: ImageUpdateInput!): Image!
  upsertPurchasedSku(where: PurchasedSkuWhereUniqueInput!, create: PurchasedSkuCreateInput!, update: PurchasedSkuUpdateInput!): PurchasedSku!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  updateManyReports(data: ReportUpdateManyMutationInput!, where: ReportWhereInput): BatchPayload!
  updateManyProducts(data: ProductUpdateManyMutationInput!, where: ProductWhereInput): BatchPayload!
  updateManySKUs(data: SKUUpdateManyMutationInput!, where: SKUWhereInput): BatchPayload!
  updateManyAttributes(data: AttributeUpdateManyMutationInput!, where: AttributeWhereInput): BatchPayload!
  updateManyCarts(data: CartUpdateManyMutationInput!, where: CartWhereInput): BatchPayload!
  updateManyOrders(data: OrderUpdateManyMutationInput!, where: OrderWhereInput): BatchPayload!
  updateManyPrices(data: PriceUpdateManyMutationInput!, where: PriceWhereInput): BatchPayload!
  updateManyImages(data: ImageUpdateManyMutationInput!, where: ImageWhereInput): BatchPayload!
  updateManyPurchasedSkus(data: PurchasedSkuUpdateManyMutationInput!, where: PurchasedSkuWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  deleteManyReports(where: ReportWhereInput): BatchPayload!
  deleteManyProducts(where: ProductWhereInput): BatchPayload!
  deleteManySKUs(where: SKUWhereInput): BatchPayload!
  deleteManyAttributes(where: AttributeWhereInput): BatchPayload!
  deleteManyCarts(where: CartWhereInput): BatchPayload!
  deleteManyOrders(where: OrderWhereInput): BatchPayload!
  deleteManyPrices(where: PriceWhereInput): BatchPayload!
  deleteManyImages(where: ImageWhereInput): BatchPayload!
  deleteManyPurchasedSkus(where: PurchasedSkuWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

type Order implements Node {
  id: ID!
  items(where: PurchasedSkuWhereInput, orderBy: PurchasedSkuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PurchasedSku!]
  total: Int!
  currency: String!
  charge: String!
}

"""A connection to a list of items."""
type OrderConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [OrderEdge]!
  aggregate: AggregateOrder!
}

input OrderCreateInput {
  id: ID
  total: Int!
  currency: String!
  charge: String!
  items: PurchasedSkuCreateManyInput
}

"""An edge in a connection."""
type OrderEdge {
  """The item at the end of the edge."""
  node: Order!

  """A cursor for use in pagination."""
  cursor: String!
}

enum OrderOrderByInput {
  id_ASC
  id_DESC
  total_ASC
  total_DESC
  currency_ASC
  currency_DESC
  charge_ASC
  charge_DESC
}

type OrderPreviousValues {
  id: ID!
  total: Int!
  currency: String!
  charge: String!
}

type OrderSubscriptionPayload {
  mutation: MutationType!
  node: Order
  updatedFields: [String!]
  previousValues: OrderPreviousValues
}

input OrderSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [OrderSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: OrderWhereInput
}

input OrderUpdateInput {
  total: Int
  currency: String
  charge: String
  items: PurchasedSkuUpdateManyInput
}

input OrderUpdateManyMutationInput {
  total: Int
  currency: String
  charge: String
}

input OrderWhereInput {
  """Logical AND on all given filters."""
  AND: [OrderWhereInput!]

  """Logical OR on all given filters."""
  OR: [OrderWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [OrderWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  total: Int

  """All values that are not equal to given value."""
  total_not: Int

  """All values that are contained in given list."""
  total_in: [Int!]

  """All values that are not contained in given list."""
  total_not_in: [Int!]

  """All values less than the given value."""
  total_lt: Int

  """All values less than or equal the given value."""
  total_lte: Int

  """All values greater than the given value."""
  total_gt: Int

  """All values greater than or equal the given value."""
  total_gte: Int
  currency: String

  """All values that are not equal to given value."""
  currency_not: String

  """All values that are contained in given list."""
  currency_in: [String!]

  """All values that are not contained in given list."""
  currency_not_in: [String!]

  """All values less than the given value."""
  currency_lt: String

  """All values less than or equal the given value."""
  currency_lte: String

  """All values greater than the given value."""
  currency_gt: String

  """All values greater than or equal the given value."""
  currency_gte: String

  """All values containing the given string."""
  currency_contains: String

  """All values not containing the given string."""
  currency_not_contains: String

  """All values starting with the given string."""
  currency_starts_with: String

  """All values not starting with the given string."""
  currency_not_starts_with: String

  """All values ending with the given string."""
  currency_ends_with: String

  """All values not ending with the given string."""
  currency_not_ends_with: String
  charge: String

  """All values that are not equal to given value."""
  charge_not: String

  """All values that are contained in given list."""
  charge_in: [String!]

  """All values that are not contained in given list."""
  charge_not_in: [String!]

  """All values less than the given value."""
  charge_lt: String

  """All values less than or equal the given value."""
  charge_lte: String

  """All values greater than the given value."""
  charge_gt: String

  """All values greater than or equal the given value."""
  charge_gte: String

  """All values containing the given string."""
  charge_contains: String

  """All values not containing the given string."""
  charge_not_contains: String

  """All values starting with the given string."""
  charge_starts_with: String

  """All values not starting with the given string."""
  charge_not_starts_with: String

  """All values ending with the given string."""
  charge_ends_with: String

  """All values not ending with the given string."""
  charge_not_ends_with: String
  items_every: PurchasedSkuWhereInput
  items_some: PurchasedSkuWhereInput
  items_none: PurchasedSkuWhereInput
}

input OrderWhereUniqueInput {
  id: ID
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  ADMIN
  USER
  CATEGORYCREATE
  CATEGORYUPDATE
  CATEGORYDELETE
  PERMISSIONUPDATE
  REPORTCREATE
  REPORTRESOLVE
  PRODUCTCREATE
  PRODUCTDELETE
  PRODUCTUPDATE
  VARIANT
}

type Price implements Node {
  id: ID!
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

"""A connection to a list of items."""
type PriceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PriceEdge]!
  aggregate: AggregatePrice!
}

input PriceCreateInput {
  id: ID
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

input PriceCreateOneInput {
  create: PriceCreateInput
  connect: PriceWhereUniqueInput
}

"""An edge in a connection."""
type PriceEdge {
  """The item at the end of the edge."""
  node: Price!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PriceOrderByInput {
  id_ASC
  id_DESC
  DKK_ASC
  DKK_DESC
  USD_ASC
  USD_DESC
  EUR_ASC
  EUR_DESC
  GBP_ASC
  GBP_DESC
}

type PricePreviousValues {
  id: ID!
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

type PriceSubscriptionPayload {
  mutation: MutationType!
  node: Price
  updatedFields: [String!]
  previousValues: PricePreviousValues
}

input PriceSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PriceSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PriceSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PriceSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PriceWhereInput
}

input PriceUpdateDataInput {
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

input PriceUpdateInput {
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

input PriceUpdateManyMutationInput {
  DKK: Int
  USD: Int
  EUR: Int
  GBP: Int
}

input PriceUpdateOneInput {
  create: PriceCreateInput
  connect: PriceWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PriceUpdateDataInput
  upsert: PriceUpsertNestedInput
}

input PriceUpsertNestedInput {
  update: PriceUpdateDataInput!
  create: PriceCreateInput!
}

input PriceWhereInput {
  """Logical AND on all given filters."""
  AND: [PriceWhereInput!]

  """Logical OR on all given filters."""
  OR: [PriceWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PriceWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  DKK: Int

  """All values that are not equal to given value."""
  DKK_not: Int

  """All values that are contained in given list."""
  DKK_in: [Int!]

  """All values that are not contained in given list."""
  DKK_not_in: [Int!]

  """All values less than the given value."""
  DKK_lt: Int

  """All values less than or equal the given value."""
  DKK_lte: Int

  """All values greater than the given value."""
  DKK_gt: Int

  """All values greater than or equal the given value."""
  DKK_gte: Int
  USD: Int

  """All values that are not equal to given value."""
  USD_not: Int

  """All values that are contained in given list."""
  USD_in: [Int!]

  """All values that are not contained in given list."""
  USD_not_in: [Int!]

  """All values less than the given value."""
  USD_lt: Int

  """All values less than or equal the given value."""
  USD_lte: Int

  """All values greater than the given value."""
  USD_gt: Int

  """All values greater than or equal the given value."""
  USD_gte: Int
  EUR: Int

  """All values that are not equal to given value."""
  EUR_not: Int

  """All values that are contained in given list."""
  EUR_in: [Int!]

  """All values that are not contained in given list."""
  EUR_not_in: [Int!]

  """All values less than the given value."""
  EUR_lt: Int

  """All values less than or equal the given value."""
  EUR_lte: Int

  """All values greater than the given value."""
  EUR_gt: Int

  """All values greater than or equal the given value."""
  EUR_gte: Int
  GBP: Int

  """All values that are not equal to given value."""
  GBP_not: Int

  """All values that are contained in given list."""
  GBP_in: [Int!]

  """All values that are not contained in given list."""
  GBP_not_in: [Int!]

  """All values less than the given value."""
  GBP_lt: Int

  """All values less than or equal the given value."""
  GBP_lte: Int

  """All values greater than the given value."""
  GBP_gt: Int

  """All values greater than or equal the given value."""
  GBP_gte: Int
}

input PriceWhereUniqueInput {
  id: ID
}

type Product implements Node {
  id: ID!
  code: String
  customizable: Boolean
  price: Price
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category!]
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image!]
  skus(where: SKUWhereInput, orderBy: SKUOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SKU!]
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

"""A connection to a list of items."""
type ProductConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProductEdge]!
  aggregate: AggregateProduct!
}

input ProductCreateInput {
  id: ID
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceCreateOneInput
  categories: CategoryCreateManyWithoutProductsInput
  images: ImageCreateManyWithoutProductInput
  skus: SKUCreateManyWithoutProductInput
}

input ProductCreateManyWithoutCategoriesInput {
  create: [ProductCreateWithoutCategoriesInput!]
  connect: [ProductWhereUniqueInput!]
}

input ProductCreateOneWithoutImagesInput {
  create: ProductCreateWithoutImagesInput
  connect: ProductWhereUniqueInput
}

input ProductCreateOneWithoutSkusInput {
  create: ProductCreateWithoutSkusInput
  connect: ProductWhereUniqueInput
}

input ProductCreateWithoutCategoriesInput {
  id: ID
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceCreateOneInput
  images: ImageCreateManyWithoutProductInput
  skus: SKUCreateManyWithoutProductInput
}

input ProductCreateWithoutImagesInput {
  id: ID
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceCreateOneInput
  categories: CategoryCreateManyWithoutProductsInput
  skus: SKUCreateManyWithoutProductInput
}

input ProductCreateWithoutSkusInput {
  id: ID
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceCreateOneInput
  categories: CategoryCreateManyWithoutProductsInput
  images: ImageCreateManyWithoutProductInput
}

"""An edge in a connection."""
type ProductEdge {
  """The item at the end of the edge."""
  node: Product!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProductOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  customizable_ASC
  customizable_DESC
  hasMultiplePrices_ASC
  hasMultiplePrices_DESC
  sorting_ASC
  sorting_DESC
  published_ASC
  published_DESC
  selectedAttributes_ASC
  selectedAttributes_DESC
  slug_da_ASC
  slug_da_DESC
  slug_en_ASC
  slug_en_DESC
  name_da_ASC
  name_da_DESC
  name_en_ASC
  name_en_DESC
  description_da_ASC
  description_da_DESC
  description_en_ASC
  description_en_DESC
}

type ProductPreviousValues {
  id: ID!
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input ProductScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProductScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  customizable: Boolean

  """All values that are not equal to given value."""
  customizable_not: Boolean
  hasMultiplePrices: Boolean

  """All values that are not equal to given value."""
  hasMultiplePrices_not: Boolean
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  selectedAttributes: String

  """All values that are not equal to given value."""
  selectedAttributes_not: String

  """All values that are contained in given list."""
  selectedAttributes_in: [String!]

  """All values that are not contained in given list."""
  selectedAttributes_not_in: [String!]

  """All values less than the given value."""
  selectedAttributes_lt: String

  """All values less than or equal the given value."""
  selectedAttributes_lte: String

  """All values greater than the given value."""
  selectedAttributes_gt: String

  """All values greater than or equal the given value."""
  selectedAttributes_gte: String

  """All values containing the given string."""
  selectedAttributes_contains: String

  """All values not containing the given string."""
  selectedAttributes_not_contains: String

  """All values starting with the given string."""
  selectedAttributes_starts_with: String

  """All values not starting with the given string."""
  selectedAttributes_not_starts_with: String

  """All values ending with the given string."""
  selectedAttributes_ends_with: String

  """All values not ending with the given string."""
  selectedAttributes_not_ends_with: String
  slug_da: String

  """All values that are not equal to given value."""
  slug_da_not: String

  """All values that are contained in given list."""
  slug_da_in: [String!]

  """All values that are not contained in given list."""
  slug_da_not_in: [String!]

  """All values less than the given value."""
  slug_da_lt: String

  """All values less than or equal the given value."""
  slug_da_lte: String

  """All values greater than the given value."""
  slug_da_gt: String

  """All values greater than or equal the given value."""
  slug_da_gte: String

  """All values containing the given string."""
  slug_da_contains: String

  """All values not containing the given string."""
  slug_da_not_contains: String

  """All values starting with the given string."""
  slug_da_starts_with: String

  """All values not starting with the given string."""
  slug_da_not_starts_with: String

  """All values ending with the given string."""
  slug_da_ends_with: String

  """All values not ending with the given string."""
  slug_da_not_ends_with: String
  slug_en: String

  """All values that are not equal to given value."""
  slug_en_not: String

  """All values that are contained in given list."""
  slug_en_in: [String!]

  """All values that are not contained in given list."""
  slug_en_not_in: [String!]

  """All values less than the given value."""
  slug_en_lt: String

  """All values less than or equal the given value."""
  slug_en_lte: String

  """All values greater than the given value."""
  slug_en_gt: String

  """All values greater than or equal the given value."""
  slug_en_gte: String

  """All values containing the given string."""
  slug_en_contains: String

  """All values not containing the given string."""
  slug_en_not_contains: String

  """All values starting with the given string."""
  slug_en_starts_with: String

  """All values not starting with the given string."""
  slug_en_not_starts_with: String

  """All values ending with the given string."""
  slug_en_ends_with: String

  """All values not ending with the given string."""
  slug_en_not_ends_with: String
  name_da: String

  """All values that are not equal to given value."""
  name_da_not: String

  """All values that are contained in given list."""
  name_da_in: [String!]

  """All values that are not contained in given list."""
  name_da_not_in: [String!]

  """All values less than the given value."""
  name_da_lt: String

  """All values less than or equal the given value."""
  name_da_lte: String

  """All values greater than the given value."""
  name_da_gt: String

  """All values greater than or equal the given value."""
  name_da_gte: String

  """All values containing the given string."""
  name_da_contains: String

  """All values not containing the given string."""
  name_da_not_contains: String

  """All values starting with the given string."""
  name_da_starts_with: String

  """All values not starting with the given string."""
  name_da_not_starts_with: String

  """All values ending with the given string."""
  name_da_ends_with: String

  """All values not ending with the given string."""
  name_da_not_ends_with: String
  name_en: String

  """All values that are not equal to given value."""
  name_en_not: String

  """All values that are contained in given list."""
  name_en_in: [String!]

  """All values that are not contained in given list."""
  name_en_not_in: [String!]

  """All values less than the given value."""
  name_en_lt: String

  """All values less than or equal the given value."""
  name_en_lte: String

  """All values greater than the given value."""
  name_en_gt: String

  """All values greater than or equal the given value."""
  name_en_gte: String

  """All values containing the given string."""
  name_en_contains: String

  """All values not containing the given string."""
  name_en_not_contains: String

  """All values starting with the given string."""
  name_en_starts_with: String

  """All values not starting with the given string."""
  name_en_not_starts_with: String

  """All values ending with the given string."""
  name_en_ends_with: String

  """All values not ending with the given string."""
  name_en_not_ends_with: String
  description_da: String

  """All values that are not equal to given value."""
  description_da_not: String

  """All values that are contained in given list."""
  description_da_in: [String!]

  """All values that are not contained in given list."""
  description_da_not_in: [String!]

  """All values less than the given value."""
  description_da_lt: String

  """All values less than or equal the given value."""
  description_da_lte: String

  """All values greater than the given value."""
  description_da_gt: String

  """All values greater than or equal the given value."""
  description_da_gte: String

  """All values containing the given string."""
  description_da_contains: String

  """All values not containing the given string."""
  description_da_not_contains: String

  """All values starting with the given string."""
  description_da_starts_with: String

  """All values not starting with the given string."""
  description_da_not_starts_with: String

  """All values ending with the given string."""
  description_da_ends_with: String

  """All values not ending with the given string."""
  description_da_not_ends_with: String
  description_en: String

  """All values that are not equal to given value."""
  description_en_not: String

  """All values that are contained in given list."""
  description_en_in: [String!]

  """All values that are not contained in given list."""
  description_en_not_in: [String!]

  """All values less than the given value."""
  description_en_lt: String

  """All values less than or equal the given value."""
  description_en_lte: String

  """All values greater than the given value."""
  description_en_gt: String

  """All values greater than or equal the given value."""
  description_en_gte: String

  """All values containing the given string."""
  description_en_contains: String

  """All values not containing the given string."""
  description_en_not_contains: String

  """All values starting with the given string."""
  description_en_starts_with: String

  """All values not starting with the given string."""
  description_en_not_starts_with: String

  """All values ending with the given string."""
  description_en_ends_with: String

  """All values not ending with the given string."""
  description_en_not_ends_with: String
}

type ProductSubscriptionPayload {
  mutation: MutationType!
  node: Product
  updatedFields: [String!]
  previousValues: ProductPreviousValues
}

input ProductSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProductSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProductWhereInput
}

input ProductUpdateInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceUpdateOneInput
  categories: CategoryUpdateManyWithoutProductsInput
  images: ImageUpdateManyWithoutProductInput
  skus: SKUUpdateManyWithoutProductInput
}

input ProductUpdateManyDataInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input ProductUpdateManyMutationInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
}

input ProductUpdateManyWithoutCategoriesInput {
  create: [ProductCreateWithoutCategoriesInput!]
  connect: [ProductWhereUniqueInput!]
  set: [ProductWhereUniqueInput!]
  disconnect: [ProductWhereUniqueInput!]
  delete: [ProductWhereUniqueInput!]
  update: [ProductUpdateWithWhereUniqueWithoutCategoriesInput!]
  updateMany: [ProductUpdateManyWithWhereNestedInput!]
  deleteMany: [ProductScalarWhereInput!]
  upsert: [ProductUpsertWithWhereUniqueWithoutCategoriesInput!]
}

input ProductUpdateManyWithWhereNestedInput {
  where: ProductScalarWhereInput!
  data: ProductUpdateManyDataInput!
}

input ProductUpdateOneRequiredWithoutSkusInput {
  create: ProductCreateWithoutSkusInput
  connect: ProductWhereUniqueInput
  update: ProductUpdateWithoutSkusDataInput
  upsert: ProductUpsertWithoutSkusInput
}

input ProductUpdateOneWithoutImagesInput {
  create: ProductCreateWithoutImagesInput
  connect: ProductWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProductUpdateWithoutImagesDataInput
  upsert: ProductUpsertWithoutImagesInput
}

input ProductUpdateWithoutCategoriesDataInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceUpdateOneInput
  images: ImageUpdateManyWithoutProductInput
  skus: SKUUpdateManyWithoutProductInput
}

input ProductUpdateWithoutImagesDataInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceUpdateOneInput
  categories: CategoryUpdateManyWithoutProductsInput
  skus: SKUUpdateManyWithoutProductInput
}

input ProductUpdateWithoutSkusDataInput {
  code: String
  customizable: Boolean
  hasMultiplePrices: Boolean
  sorting: Int
  published: Boolean
  selectedAttributes: String
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  price: PriceUpdateOneInput
  categories: CategoryUpdateManyWithoutProductsInput
  images: ImageUpdateManyWithoutProductInput
}

input ProductUpdateWithWhereUniqueWithoutCategoriesInput {
  where: ProductWhereUniqueInput!
  data: ProductUpdateWithoutCategoriesDataInput!
}

input ProductUpsertWithoutImagesInput {
  update: ProductUpdateWithoutImagesDataInput!
  create: ProductCreateWithoutImagesInput!
}

input ProductUpsertWithoutSkusInput {
  update: ProductUpdateWithoutSkusDataInput!
  create: ProductCreateWithoutSkusInput!
}

input ProductUpsertWithWhereUniqueWithoutCategoriesInput {
  where: ProductWhereUniqueInput!
  update: ProductUpdateWithoutCategoriesDataInput!
  create: ProductCreateWithoutCategoriesInput!
}

input ProductWhereInput {
  """Logical AND on all given filters."""
  AND: [ProductWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProductWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProductWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  customizable: Boolean

  """All values that are not equal to given value."""
  customizable_not: Boolean
  hasMultiplePrices: Boolean

  """All values that are not equal to given value."""
  hasMultiplePrices_not: Boolean
  sorting: Int

  """All values that are not equal to given value."""
  sorting_not: Int

  """All values that are contained in given list."""
  sorting_in: [Int!]

  """All values that are not contained in given list."""
  sorting_not_in: [Int!]

  """All values less than the given value."""
  sorting_lt: Int

  """All values less than or equal the given value."""
  sorting_lte: Int

  """All values greater than the given value."""
  sorting_gt: Int

  """All values greater than or equal the given value."""
  sorting_gte: Int
  published: Boolean

  """All values that are not equal to given value."""
  published_not: Boolean
  selectedAttributes: String

  """All values that are not equal to given value."""
  selectedAttributes_not: String

  """All values that are contained in given list."""
  selectedAttributes_in: [String!]

  """All values that are not contained in given list."""
  selectedAttributes_not_in: [String!]

  """All values less than the given value."""
  selectedAttributes_lt: String

  """All values less than or equal the given value."""
  selectedAttributes_lte: String

  """All values greater than the given value."""
  selectedAttributes_gt: String

  """All values greater than or equal the given value."""
  selectedAttributes_gte: String

  """All values containing the given string."""
  selectedAttributes_contains: String

  """All values not containing the given string."""
  selectedAttributes_not_contains: String

  """All values starting with the given string."""
  selectedAttributes_starts_with: String

  """All values not starting with the given string."""
  selectedAttributes_not_starts_with: String

  """All values ending with the given string."""
  selectedAttributes_ends_with: String

  """All values not ending with the given string."""
  selectedAttributes_not_ends_with: String
  slug_da: String

  """All values that are not equal to given value."""
  slug_da_not: String

  """All values that are contained in given list."""
  slug_da_in: [String!]

  """All values that are not contained in given list."""
  slug_da_not_in: [String!]

  """All values less than the given value."""
  slug_da_lt: String

  """All values less than or equal the given value."""
  slug_da_lte: String

  """All values greater than the given value."""
  slug_da_gt: String

  """All values greater than or equal the given value."""
  slug_da_gte: String

  """All values containing the given string."""
  slug_da_contains: String

  """All values not containing the given string."""
  slug_da_not_contains: String

  """All values starting with the given string."""
  slug_da_starts_with: String

  """All values not starting with the given string."""
  slug_da_not_starts_with: String

  """All values ending with the given string."""
  slug_da_ends_with: String

  """All values not ending with the given string."""
  slug_da_not_ends_with: String
  slug_en: String

  """All values that are not equal to given value."""
  slug_en_not: String

  """All values that are contained in given list."""
  slug_en_in: [String!]

  """All values that are not contained in given list."""
  slug_en_not_in: [String!]

  """All values less than the given value."""
  slug_en_lt: String

  """All values less than or equal the given value."""
  slug_en_lte: String

  """All values greater than the given value."""
  slug_en_gt: String

  """All values greater than or equal the given value."""
  slug_en_gte: String

  """All values containing the given string."""
  slug_en_contains: String

  """All values not containing the given string."""
  slug_en_not_contains: String

  """All values starting with the given string."""
  slug_en_starts_with: String

  """All values not starting with the given string."""
  slug_en_not_starts_with: String

  """All values ending with the given string."""
  slug_en_ends_with: String

  """All values not ending with the given string."""
  slug_en_not_ends_with: String
  name_da: String

  """All values that are not equal to given value."""
  name_da_not: String

  """All values that are contained in given list."""
  name_da_in: [String!]

  """All values that are not contained in given list."""
  name_da_not_in: [String!]

  """All values less than the given value."""
  name_da_lt: String

  """All values less than or equal the given value."""
  name_da_lte: String

  """All values greater than the given value."""
  name_da_gt: String

  """All values greater than or equal the given value."""
  name_da_gte: String

  """All values containing the given string."""
  name_da_contains: String

  """All values not containing the given string."""
  name_da_not_contains: String

  """All values starting with the given string."""
  name_da_starts_with: String

  """All values not starting with the given string."""
  name_da_not_starts_with: String

  """All values ending with the given string."""
  name_da_ends_with: String

  """All values not ending with the given string."""
  name_da_not_ends_with: String
  name_en: String

  """All values that are not equal to given value."""
  name_en_not: String

  """All values that are contained in given list."""
  name_en_in: [String!]

  """All values that are not contained in given list."""
  name_en_not_in: [String!]

  """All values less than the given value."""
  name_en_lt: String

  """All values less than or equal the given value."""
  name_en_lte: String

  """All values greater than the given value."""
  name_en_gt: String

  """All values greater than or equal the given value."""
  name_en_gte: String

  """All values containing the given string."""
  name_en_contains: String

  """All values not containing the given string."""
  name_en_not_contains: String

  """All values starting with the given string."""
  name_en_starts_with: String

  """All values not starting with the given string."""
  name_en_not_starts_with: String

  """All values ending with the given string."""
  name_en_ends_with: String

  """All values not ending with the given string."""
  name_en_not_ends_with: String
  description_da: String

  """All values that are not equal to given value."""
  description_da_not: String

  """All values that are contained in given list."""
  description_da_in: [String!]

  """All values that are not contained in given list."""
  description_da_not_in: [String!]

  """All values less than the given value."""
  description_da_lt: String

  """All values less than or equal the given value."""
  description_da_lte: String

  """All values greater than the given value."""
  description_da_gt: String

  """All values greater than or equal the given value."""
  description_da_gte: String

  """All values containing the given string."""
  description_da_contains: String

  """All values not containing the given string."""
  description_da_not_contains: String

  """All values starting with the given string."""
  description_da_starts_with: String

  """All values not starting with the given string."""
  description_da_not_starts_with: String

  """All values ending with the given string."""
  description_da_ends_with: String

  """All values not ending with the given string."""
  description_da_not_ends_with: String
  description_en: String

  """All values that are not equal to given value."""
  description_en_not: String

  """All values that are contained in given list."""
  description_en_in: [String!]

  """All values that are not contained in given list."""
  description_en_not_in: [String!]

  """All values less than the given value."""
  description_en_lt: String

  """All values less than or equal the given value."""
  description_en_lte: String

  """All values greater than the given value."""
  description_en_gt: String

  """All values greater than or equal the given value."""
  description_en_gte: String

  """All values containing the given string."""
  description_en_contains: String

  """All values not containing the given string."""
  description_en_not_contains: String

  """All values starting with the given string."""
  description_en_starts_with: String

  """All values not starting with the given string."""
  description_en_not_starts_with: String

  """All values ending with the given string."""
  description_en_ends_with: String

  """All values not ending with the given string."""
  description_en_not_ends_with: String
  price: PriceWhereInput
  categories_every: CategoryWhereInput
  categories_some: CategoryWhereInput
  categories_none: CategoryWhereInput
  images_every: ImageWhereInput
  images_some: ImageWhereInput
  images_none: ImageWhereInput
  skus_every: SKUWhereInput
  skus_some: SKUWhereInput
  skus_none: SKUWhereInput
}

input ProductWhereUniqueInput {
  id: ID
  code: String
  slug_da: String
  slug_en: String
}

type PurchasedSku implements Node {
  id: ID!
  code: String!
  name: String!
  price: Int!
  currency: String!
  image: String!
  variationInfo: String!
}

"""A connection to a list of items."""
type PurchasedSkuConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PurchasedSkuEdge]!
  aggregate: AggregatePurchasedSku!
}

input PurchasedSkuCreateInput {
  id: ID
  code: String!
  name: String!
  price: Int!
  currency: String!
  image: String!
  variationInfo: String!
}

input PurchasedSkuCreateManyInput {
  create: [PurchasedSkuCreateInput!]
  connect: [PurchasedSkuWhereUniqueInput!]
}

"""An edge in a connection."""
type PurchasedSkuEdge {
  """The item at the end of the edge."""
  node: PurchasedSku!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PurchasedSkuOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  currency_ASC
  currency_DESC
  image_ASC
  image_DESC
  variationInfo_ASC
  variationInfo_DESC
}

type PurchasedSkuPreviousValues {
  id: ID!
  code: String!
  name: String!
  price: Int!
  currency: String!
  image: String!
  variationInfo: String!
}

input PurchasedSkuScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PurchasedSkuScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PurchasedSkuScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PurchasedSkuScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  currency: String

  """All values that are not equal to given value."""
  currency_not: String

  """All values that are contained in given list."""
  currency_in: [String!]

  """All values that are not contained in given list."""
  currency_not_in: [String!]

  """All values less than the given value."""
  currency_lt: String

  """All values less than or equal the given value."""
  currency_lte: String

  """All values greater than the given value."""
  currency_gt: String

  """All values greater than or equal the given value."""
  currency_gte: String

  """All values containing the given string."""
  currency_contains: String

  """All values not containing the given string."""
  currency_not_contains: String

  """All values starting with the given string."""
  currency_starts_with: String

  """All values not starting with the given string."""
  currency_not_starts_with: String

  """All values ending with the given string."""
  currency_ends_with: String

  """All values not ending with the given string."""
  currency_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  variationInfo: String

  """All values that are not equal to given value."""
  variationInfo_not: String

  """All values that are contained in given list."""
  variationInfo_in: [String!]

  """All values that are not contained in given list."""
  variationInfo_not_in: [String!]

  """All values less than the given value."""
  variationInfo_lt: String

  """All values less than or equal the given value."""
  variationInfo_lte: String

  """All values greater than the given value."""
  variationInfo_gt: String

  """All values greater than or equal the given value."""
  variationInfo_gte: String

  """All values containing the given string."""
  variationInfo_contains: String

  """All values not containing the given string."""
  variationInfo_not_contains: String

  """All values starting with the given string."""
  variationInfo_starts_with: String

  """All values not starting with the given string."""
  variationInfo_not_starts_with: String

  """All values ending with the given string."""
  variationInfo_ends_with: String

  """All values not ending with the given string."""
  variationInfo_not_ends_with: String
}

type PurchasedSkuSubscriptionPayload {
  mutation: MutationType!
  node: PurchasedSku
  updatedFields: [String!]
  previousValues: PurchasedSkuPreviousValues
}

input PurchasedSkuSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PurchasedSkuSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PurchasedSkuSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PurchasedSkuSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PurchasedSkuWhereInput
}

input PurchasedSkuUpdateDataInput {
  code: String
  name: String
  price: Int
  currency: String
  image: String
  variationInfo: String
}

input PurchasedSkuUpdateInput {
  code: String
  name: String
  price: Int
  currency: String
  image: String
  variationInfo: String
}

input PurchasedSkuUpdateManyDataInput {
  code: String
  name: String
  price: Int
  currency: String
  image: String
  variationInfo: String
}

input PurchasedSkuUpdateManyInput {
  create: [PurchasedSkuCreateInput!]
  connect: [PurchasedSkuWhereUniqueInput!]
  set: [PurchasedSkuWhereUniqueInput!]
  disconnect: [PurchasedSkuWhereUniqueInput!]
  delete: [PurchasedSkuWhereUniqueInput!]
  update: [PurchasedSkuUpdateWithWhereUniqueNestedInput!]
  updateMany: [PurchasedSkuUpdateManyWithWhereNestedInput!]
  deleteMany: [PurchasedSkuScalarWhereInput!]
  upsert: [PurchasedSkuUpsertWithWhereUniqueNestedInput!]
}

input PurchasedSkuUpdateManyMutationInput {
  code: String
  name: String
  price: Int
  currency: String
  image: String
  variationInfo: String
}

input PurchasedSkuUpdateManyWithWhereNestedInput {
  where: PurchasedSkuScalarWhereInput!
  data: PurchasedSkuUpdateManyDataInput!
}

input PurchasedSkuUpdateWithWhereUniqueNestedInput {
  where: PurchasedSkuWhereUniqueInput!
  data: PurchasedSkuUpdateDataInput!
}

input PurchasedSkuUpsertWithWhereUniqueNestedInput {
  where: PurchasedSkuWhereUniqueInput!
  update: PurchasedSkuUpdateDataInput!
  create: PurchasedSkuCreateInput!
}

input PurchasedSkuWhereInput {
  """Logical AND on all given filters."""
  AND: [PurchasedSkuWhereInput!]

  """Logical OR on all given filters."""
  OR: [PurchasedSkuWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PurchasedSkuWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  code: String

  """All values that are not equal to given value."""
  code_not: String

  """All values that are contained in given list."""
  code_in: [String!]

  """All values that are not contained in given list."""
  code_not_in: [String!]

  """All values less than the given value."""
  code_lt: String

  """All values less than or equal the given value."""
  code_lte: String

  """All values greater than the given value."""
  code_gt: String

  """All values greater than or equal the given value."""
  code_gte: String

  """All values containing the given string."""
  code_contains: String

  """All values not containing the given string."""
  code_not_contains: String

  """All values starting with the given string."""
  code_starts_with: String

  """All values not starting with the given string."""
  code_not_starts_with: String

  """All values ending with the given string."""
  code_ends_with: String

  """All values not ending with the given string."""
  code_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  price: Int

  """All values that are not equal to given value."""
  price_not: Int

  """All values that are contained in given list."""
  price_in: [Int!]

  """All values that are not contained in given list."""
  price_not_in: [Int!]

  """All values less than the given value."""
  price_lt: Int

  """All values less than or equal the given value."""
  price_lte: Int

  """All values greater than the given value."""
  price_gt: Int

  """All values greater than or equal the given value."""
  price_gte: Int
  currency: String

  """All values that are not equal to given value."""
  currency_not: String

  """All values that are contained in given list."""
  currency_in: [String!]

  """All values that are not contained in given list."""
  currency_not_in: [String!]

  """All values less than the given value."""
  currency_lt: String

  """All values less than or equal the given value."""
  currency_lte: String

  """All values greater than the given value."""
  currency_gt: String

  """All values greater than or equal the given value."""
  currency_gte: String

  """All values containing the given string."""
  currency_contains: String

  """All values not containing the given string."""
  currency_not_contains: String

  """All values starting with the given string."""
  currency_starts_with: String

  """All values not starting with the given string."""
  currency_not_starts_with: String

  """All values ending with the given string."""
  currency_ends_with: String

  """All values not ending with the given string."""
  currency_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  variationInfo: String

  """All values that are not equal to given value."""
  variationInfo_not: String

  """All values that are contained in given list."""
  variationInfo_in: [String!]

  """All values that are not contained in given list."""
  variationInfo_not_in: [String!]

  """All values less than the given value."""
  variationInfo_lt: String

  """All values less than or equal the given value."""
  variationInfo_lte: String

  """All values greater than the given value."""
  variationInfo_gt: String

  """All values greater than or equal the given value."""
  variationInfo_gte: String

  """All values containing the given string."""
  variationInfo_contains: String

  """All values not containing the given string."""
  variationInfo_not_contains: String

  """All values starting with the given string."""
  variationInfo_starts_with: String

  """All values not starting with the given string."""
  variationInfo_not_starts_with: String

  """All values ending with the given string."""
  variationInfo_ends_with: String

  """All values not ending with the given string."""
  variationInfo_not_ends_with: String
}

input PurchasedSkuWhereUniqueInput {
  id: ID
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  reports(where: ReportWhereInput, orderBy: ReportOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Report]!
  products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Product]!
  sKUs(where: SKUWhereInput, orderBy: SKUOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SKU]!
  attributes(where: AttributeWhereInput, orderBy: AttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attribute]!
  carts(where: CartWhereInput, orderBy: CartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cart]!
  orders(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Order]!
  prices(where: PriceWhereInput, orderBy: PriceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Price]!
  images(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Image]!
  purchasedSkus(where: PurchasedSkuWhereInput, orderBy: PurchasedSkuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PurchasedSku]!
  user(where: UserWhereUniqueInput!): User
  category(where: CategoryWhereUniqueInput!): Category
  report(where: ReportWhereUniqueInput!): Report
  product(where: ProductWhereUniqueInput!): Product
  sKU(where: SKUWhereUniqueInput!): SKU
  attribute(where: AttributeWhereUniqueInput!): Attribute
  cart(where: CartWhereUniqueInput!): Cart
  order(where: OrderWhereUniqueInput!): Order
  price(where: PriceWhereUniqueInput!): Price
  image(where: ImageWhereUniqueInput!): Image
  purchasedSku(where: PurchasedSkuWhereUniqueInput!): PurchasedSku
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  reportsConnection(where: ReportWhereInput, orderBy: ReportOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReportConnection!
  productsConnection(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProductConnection!
  sKUsConnection(where: SKUWhereInput, orderBy: SKUOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SKUConnection!
  attributesConnection(where: AttributeWhereInput, orderBy: AttributeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AttributeConnection!
  cartsConnection(where: CartWhereInput, orderBy: CartOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CartConnection!
  ordersConnection(where: OrderWhereInput, orderBy: OrderOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OrderConnection!
  pricesConnection(where: PriceWhereInput, orderBy: PriceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PriceConnection!
  imagesConnection(where: ImageWhereInput, orderBy: ImageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ImageConnection!
  purchasedSkusConnection(where: PurchasedSkuWhereInput, orderBy: PurchasedSkuOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PurchasedSkuConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Report implements Node {
  id: ID!
  createdAt: DateTime!
  resolvedAt: DateTime
  image: String
  url: String!
  message: String!
}

"""A connection to a list of items."""
type ReportConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ReportEdge]!
  aggregate: AggregateReport!
}

input ReportCreateInput {
  id: ID
  resolvedAt: DateTime
  image: String
  url: String!
  message: String!
}

"""An edge in a connection."""
type ReportEdge {
  """The item at the end of the edge."""
  node: Report!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ReportOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  resolvedAt_ASC
  resolvedAt_DESC
  image_ASC
  image_DESC
  url_ASC
  url_DESC
  message_ASC
  message_DESC
}

type ReportPreviousValues {
  id: ID!
  createdAt: DateTime!
  resolvedAt: DateTime
  image: String
  url: String!
  message: String!
}

type ReportSubscriptionPayload {
  mutation: MutationType!
  node: Report
  updatedFields: [String!]
  previousValues: ReportPreviousValues
}

input ReportSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ReportSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReportSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReportSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ReportWhereInput
}

input ReportUpdateInput {
  resolvedAt: DateTime
  image: String
  url: String
  message: String
}

input ReportUpdateManyMutationInput {
  resolvedAt: DateTime
  image: String
  url: String
  message: String
}

input ReportWhereInput {
  """Logical AND on all given filters."""
  AND: [ReportWhereInput!]

  """Logical OR on all given filters."""
  OR: [ReportWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ReportWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  resolvedAt: DateTime

  """All values that are not equal to given value."""
  resolvedAt_not: DateTime

  """All values that are contained in given list."""
  resolvedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  resolvedAt_not_in: [DateTime!]

  """All values less than the given value."""
  resolvedAt_lt: DateTime

  """All values less than or equal the given value."""
  resolvedAt_lte: DateTime

  """All values greater than the given value."""
  resolvedAt_gt: DateTime

  """All values greater than or equal the given value."""
  resolvedAt_gte: DateTime
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  message: String

  """All values that are not equal to given value."""
  message_not: String

  """All values that are contained in given list."""
  message_in: [String!]

  """All values that are not contained in given list."""
  message_not_in: [String!]

  """All values less than the given value."""
  message_lt: String

  """All values less than or equal the given value."""
  message_lte: String

  """All values greater than the given value."""
  message_gt: String

  """All values greater than or equal the given value."""
  message_gte: String

  """All values containing the given string."""
  message_contains: String

  """All values not containing the given string."""
  message_not_contains: String

  """All values starting with the given string."""
  message_starts_with: String

  """All values not starting with the given string."""
  message_not_starts_with: String

  """All values ending with the given string."""
  message_ends_with: String

  """All values not ending with the given string."""
  message_not_ends_with: String
}

input ReportWhereUniqueInput {
  id: ID
}

type SKU implements Node {
  id: ID!
  sku: String!
  product: Product!
  price: Price
  image: Image
}

"""A connection to a list of items."""
type SKUConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SKUEdge]!
  aggregate: AggregateSKU!
}

input SKUCreateInput {
  id: ID
  sku: String!
  product: ProductCreateOneWithoutSkusInput!
  price: PriceCreateOneInput
  image: ImageCreateOneInput
}

input SKUCreateManyWithoutProductInput {
  create: [SKUCreateWithoutProductInput!]
  connect: [SKUWhereUniqueInput!]
}

input SKUCreateWithoutProductInput {
  id: ID
  sku: String!
  price: PriceCreateOneInput
  image: ImageCreateOneInput
}

"""An edge in a connection."""
type SKUEdge {
  """The item at the end of the edge."""
  node: SKU!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SKUOrderByInput {
  id_ASC
  id_DESC
  sku_ASC
  sku_DESC
}

type SKUPreviousValues {
  id: ID!
  sku: String!
}

input SKUScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [SKUScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SKUScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SKUScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  sku: String

  """All values that are not equal to given value."""
  sku_not: String

  """All values that are contained in given list."""
  sku_in: [String!]

  """All values that are not contained in given list."""
  sku_not_in: [String!]

  """All values less than the given value."""
  sku_lt: String

  """All values less than or equal the given value."""
  sku_lte: String

  """All values greater than the given value."""
  sku_gt: String

  """All values greater than or equal the given value."""
  sku_gte: String

  """All values containing the given string."""
  sku_contains: String

  """All values not containing the given string."""
  sku_not_contains: String

  """All values starting with the given string."""
  sku_starts_with: String

  """All values not starting with the given string."""
  sku_not_starts_with: String

  """All values ending with the given string."""
  sku_ends_with: String

  """All values not ending with the given string."""
  sku_not_ends_with: String
}

type SKUSubscriptionPayload {
  mutation: MutationType!
  node: SKU
  updatedFields: [String!]
  previousValues: SKUPreviousValues
}

input SKUSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SKUSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SKUSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SKUSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SKUWhereInput
}

input SKUUpdateInput {
  sku: String
  product: ProductUpdateOneRequiredWithoutSkusInput
  price: PriceUpdateOneInput
  image: ImageUpdateOneInput
}

input SKUUpdateManyDataInput {
  sku: String
}

input SKUUpdateManyMutationInput {
  sku: String
}

input SKUUpdateManyWithoutProductInput {
  create: [SKUCreateWithoutProductInput!]
  connect: [SKUWhereUniqueInput!]
  set: [SKUWhereUniqueInput!]
  disconnect: [SKUWhereUniqueInput!]
  delete: [SKUWhereUniqueInput!]
  update: [SKUUpdateWithWhereUniqueWithoutProductInput!]
  updateMany: [SKUUpdateManyWithWhereNestedInput!]
  deleteMany: [SKUScalarWhereInput!]
  upsert: [SKUUpsertWithWhereUniqueWithoutProductInput!]
}

input SKUUpdateManyWithWhereNestedInput {
  where: SKUScalarWhereInput!
  data: SKUUpdateManyDataInput!
}

input SKUUpdateWithoutProductDataInput {
  sku: String
  price: PriceUpdateOneInput
  image: ImageUpdateOneInput
}

input SKUUpdateWithWhereUniqueWithoutProductInput {
  where: SKUWhereUniqueInput!
  data: SKUUpdateWithoutProductDataInput!
}

input SKUUpsertWithWhereUniqueWithoutProductInput {
  where: SKUWhereUniqueInput!
  update: SKUUpdateWithoutProductDataInput!
  create: SKUCreateWithoutProductInput!
}

input SKUWhereInput {
  """Logical AND on all given filters."""
  AND: [SKUWhereInput!]

  """Logical OR on all given filters."""
  OR: [SKUWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SKUWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  sku: String

  """All values that are not equal to given value."""
  sku_not: String

  """All values that are contained in given list."""
  sku_in: [String!]

  """All values that are not contained in given list."""
  sku_not_in: [String!]

  """All values less than the given value."""
  sku_lt: String

  """All values less than or equal the given value."""
  sku_lte: String

  """All values greater than the given value."""
  sku_gt: String

  """All values greater than or equal the given value."""
  sku_gte: String

  """All values containing the given string."""
  sku_contains: String

  """All values not containing the given string."""
  sku_not_contains: String

  """All values starting with the given string."""
  sku_starts_with: String

  """All values not starting with the given string."""
  sku_not_starts_with: String

  """All values ending with the given string."""
  sku_ends_with: String

  """All values not ending with the given string."""
  sku_not_ends_with: String
  product: ProductWhereInput
  price: PriceWhereInput
  image: ImageWhereInput
}

input SKUWhereUniqueInput {
  id: ID
  sku: String
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  report(where: ReportSubscriptionWhereInput): ReportSubscriptionPayload
  product(where: ProductSubscriptionWhereInput): ProductSubscriptionPayload
  sKU(where: SKUSubscriptionWhereInput): SKUSubscriptionPayload
  attribute(where: AttributeSubscriptionWhereInput): AttributeSubscriptionPayload
  cart(where: CartSubscriptionWhereInput): CartSubscriptionPayload
  order(where: OrderSubscriptionWhereInput): OrderSubscriptionPayload
  price(where: PriceSubscriptionWhereInput): PriceSubscriptionPayload
  image(where: ImageSubscriptionWhereInput): ImageSubscriptionPayload
  purchasedSku(where: PurchasedSkuSubscriptionWhereInput): PurchasedSkuSubscriptionPayload
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpirty: Float
  permissions: [Permission!]!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpirty: Float
  permissions: UserCreatepermissionsInput
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpirty_ASC
  resetTokenExpirty_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpirty: Float
  permissions: [Permission!]!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpirty: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpirty: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpirty: Float

  """All values that are not equal to given value."""
  resetTokenExpirty_not: Float

  """All values that are contained in given list."""
  resetTokenExpirty_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpirty_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpirty_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpirty_lte: Float

  """All values greater than the given value."""
  resetTokenExpirty_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpirty_gte: Float
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
