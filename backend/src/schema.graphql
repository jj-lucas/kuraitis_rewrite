# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Query {
  users: [User]!
  categories: [Category]!
  category(id: ID!): Category
  me: User
  imageReports: [Report]
  textReports: [Report]
}

type Image {
  id: ID!
  image: String!
  largeImage: String!
  category: Category
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage

  createCategory: Category!
  deleteCategory(id: ID!): Category
  updateCategory(
    id: ID!
    slug_da: String
    slug_en: String
    name_da: String
    name_en: String
    description_da: String
    description_en: String
    images: [String]
    published: Boolean
  ): Category

  uploadCategoryImage(
    image: String!
    largeImage: String!
    categoryId: String!
  ): Image!
  sortCategoryImages(images: [String]): SuccessMessage
  deleteCategoryImage(id: ID!): Image

  createReport(
    image: String
    text: String
    url: String!
    message: String!
  ): Report
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}

type Category {
  id: ID!
  slug_da: String
  slug_en: String
  name_da: String
  name_en: String
  description_da: String
  description_en: String
  sorting: Int
  published: Boolean!
  images: [Image]
}

type Report {
  id: ID!
  createdAt: DateTime!
  resolvedAt: DateTime
  image: String
  text: String
  url: String!
  message: String!
}
