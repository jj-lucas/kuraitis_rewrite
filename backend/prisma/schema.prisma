generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permission {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}

model User {
  id               String       @id @default(cuid())
  name             String
  email            String       @unique
  password         String
  resetToken       String?
  resetTokenExpiry Float?
  permissions      Permission[]
}

model ProductImage {
  id         String   @id @default(cuid())
  mainUrl    String
  adminUrl   String
  galleryUrl String
  cartUrl    String
  thumbUrl   String
  sorting    Int?
  productId  String?
  product    Product? @relation(fields: [productId], references: [id])
  sku        Sku[]

  @@index([productId], name: "productId")
}

model CategoryImage {
  id         String    @id @default(cuid())
  thumbUrl   String
  adminUrl   String
  sorting    Int?
  categoryId String?
  category   Category? @relation(fields: [categoryId], references: [id])

  @@index([categoryId], name: "categoryId")
}

model Category {
  id             String          @id @default(cuid())
  sorting        Int?
  published      Boolean         @default(false)
  slug_da        String?         @unique
  slug_en        String?         @unique
  name_da        String?
  name_en        String?
  description_da String?
  description_en String?
  images         CategoryImage[]
  products       Product[]
}

model Report {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  resolvedAt  DateTime?
  imageUrl    String
  url         String
  description String
}

model Product {
  id                 String         @id @default(cuid())
  code               String?        @unique
  customizable       Boolean        @default(true)
  hasMultiplePrices  Boolean        @default(false)
  sorting            Int?
  published          Boolean        @default(false)
  selectedAttributes String?
  slug_da            String?        @unique
  slug_en            String?        @unique
  name_da            String?
  name_en            String?
  description_da     String?
  description_en     String?
  priceId            String?
  price              Price?         @relation(fields: [priceId], references: [id])
  images             ProductImage[]
  skus               Sku[]
  categories         Category[]

  @@index([priceId], name: "priceId")
}

model Sku {
  id        String        @id @default(cuid())
  sku       String        @unique
  productId String
  priceId   String?
  imageId   String?
  stock     Int           @default(0)
  image     ProductImage? @relation(fields: [imageId], references: [id])
  price     Price?        @relation(fields: [priceId], references: [id])
  product   Product       @relation(fields: [productId], references: [id])
  CartSku   CartSku[]

  @@index([imageId], name: "imageId")
  @@index([priceId], name: "priceId")
  @@index([productId], name: "productId")
}

model CartSku {
  id            String  @id @default(cuid())
  skuId         String
  cartId        String
  customization String?
  cart          Cart    @relation(fields: [cartId], references: [id])
  sku           Sku     @relation(fields: [skuId], references: [id])

  @@index([cartId], name: "cartId")
  @@index([skuId], name: "skuId")
}

model Attribute {
  id       String @id @default(cuid())
  name     String
  options  String
  position Int
}

model Price {
  id              String            @id @default(cuid())
  DKK             Int
  USD             Int
  EUR             Int
  GBP             Int
  product         Product[]
  shippingProfile ShippingProfile[]
  sku             Sku[]
}

model Cart {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  cartSkus  CartSku[]
}

model ShippingProfile {
  id      String @id @default(cuid())
  code    String @unique
  priceId String
  price   Price  @relation(fields: [priceId], references: [id])

  @@index([priceId], name: "priceId")
}

model PurchasedSku {
  id            String  @id @default(cuid())
  code          String
  name          String
  price         Int
  currency      String
  image         String
  variationInfo String
  orderId       String?
  customization String?
  order         Order?  @relation(fields: [orderId], references: [id])

  @@index([orderId], name: "orderId")
}

model Order {
  number        Int            @id @default(autoincrement())
  id            String         @unique @default(cuid())
  createdAt     DateTime       @default(now())
  shippedAt     DateTime?
  shipping      String
  shippingCosts String
  total         Int
  currency      String
  charge        String
  archived      Boolean        @default(false)
  trackingCode  String?
  customerId    String
  locale        String
  comment       String?
  customer      Customer       @relation(fields: [customerId], references: [id])
  items         PurchasedSku[]

  @@index([customerId], name: "customerId")
}

model Customer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  email     String
  name      String
  address   String
  address2  String?
  city      String
  zip       String
  country   String
  orders    Order[]
}
